name: Build & Push Docker Image

# ci.yml에서 각 서비스에 대해서 트리거되도록 설정
on:
  workflow_call:
    inputs:
      service:
        required: true
        type: string
      scraper:
        required: false
        type: boolean
        default: false

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Debug Secrets
        run: |
          echo "Username: ${{ secrets.DOCKER_USERNAME }}"
          echo "Password set: ${{ secrets.DOCKER_PASSWORD != '' }}"

      # 이미지 push를 위한 허브 로그인
      # 허브 로그인을 위한 Password는 Personal Access Token 값임 (not just password)
      # When authenticating to Docker Hub with GitHub Actions, use a personal access token. Don't use your account password.
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 태그 생성
      - name: Set Tag
        id: tag
        run: |
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      # 빌드 context (서비스 or scraper)
      - name: Set Build Context
        id: ctx
        run: |
          if [[ "${{ inputs.service }}" == "news" || "${{ inputs.service }}" == "stocks" ]]; then
            if [[ "${{ inputs.scraper }}" == "true" ]]; then
              echo "name=kubestock-${{ inputs.service }}-scraper" >> $GITHUB_OUTPUT
              echo "path=src/${{ inputs.service }}/scraper" >> $GITHUB_OUTPUT
              echo "kube_path=deploy/kubernetes/${{ inputs.service }}/cronjob.yml" >> $GITHUB_OUTPUT
            else
              echo "name=kubestock-${{ inputs.service }}" >> $GITHUB_OUTPUT
              echo "path=src/${{ inputs.service }}/service" >> $GITHUB_OUTPUT
              echo "kube_path=deploy/kubernetes/${{ inputs.service }}/deployment.yml" >> $GITHUB_OUTPUT
            fi
          else
            echo "name=kubestock-${{ inputs.service }}" >> $GITHUB_OUTPUT
            echo "path=src/${{ inputs.service }}" >> $GITHUB_OUTPUT
            echo "kube_path=deploy/kubernetes/${{ inputs.service }}/deployment.yml" >> $GITHUB_OUTPUT
          fi

      # 이미지 빌드 & push
      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ steps.ctx.outputs.name }}:${{ steps.tag.outputs.sha_short }} \
            -f ${{ steps.ctx.outputs.path }}/Dockerfile ${{ steps.ctx.outputs.path }}
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ steps.ctx.outputs.name }}:${{ steps.tag.outputs.sha_short }}


      # Manifest의 이미지 태그 변경
      - name: Update Manifest
        run: |
          sed -i "s|image: .*/${{ steps.ctx.outputs.name }}:.*|image: ${{ secrets.DOCKER_USERNAME }}/${{ steps.ctx.outputs.name }}:${{ steps.tag.outputs.sha_short }}|" ${{ steps.ctx.outputs.kube_path }}

      # Manifest push
      - name: Commit & Push Manifest
        working-directory: deploy/kubernetes/${{ inputs.service }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add .

          if [[ "${{ inputs.scraper }}" == "true" ]]; then
            git commit -m "Update ${{ inputs.service }}-scraper image tag to ${{ steps.tag.outputs.sha_short }}"
          else
            git commit -m "Update ${{ inputs.service }} image tag to ${{ steps.tag.outputs.sha_short }}"
          fi

          git push origin main