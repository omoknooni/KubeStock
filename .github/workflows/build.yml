name: Build & Push Docker Image

# ci.yml에서 각 서비스에 대해서 트리거되도록 설정
on:
  workflow_call:
    inputs:
      service:
        required: true
        type: string
      scraper:
        required: false
        type: boolean
        default: false
      tag:
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-${{ inputs.service }}
      cancel-in-progress: false
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Debug Secrets
        run: |
          echo "Username: ${{ secrets.DOCKER_USERNAME }}"
          echo "Password set: ${{ secrets.DOCKER_PASSWORD != '' }}"

      # 이미지 push를 위한 허브 로그인
      # 허브 로그인을 위한 Password는 Personal Access Token 값임 (not just password)
      # When authenticating to Docker Hub with GitHub Actions, use a personal access token. Don't use your account password.
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 빌드 context (서비스 or scraper)
      - name: Set Build Context
        id: ctx
        run: |
          if [[ "${{ inputs.service }}" == "news" || "${{ inputs.service }}" == "stocks" ]]; then
            if [[ "${{ inputs.scraper }}" == "true" ]]; then
              echo "name=kubestock-${{ inputs.service }}-scraper" >> $GITHUB_OUTPUT
              echo "path=src/${{ inputs.service }}/scraper" >> $GITHUB_OUTPUT
              echo "kube_path=deploy/kubernetes/${{ inputs.service }}/cronjob.yml" >> $GITHUB_OUTPUT
            else
              echo "name=kubestock-${{ inputs.service }}" >> $GITHUB_OUTPUT
              echo "path=src/${{ inputs.service }}/service" >> $GITHUB_OUTPUT
              echo "kube_path=deploy/kubernetes/${{ inputs.service }}/deployment.yml" >> $GITHUB_OUTPUT
            fi
          else
            echo "name=kubestock-${{ inputs.service }}" >> $GITHUB_OUTPUT
            echo "path=src/${{ inputs.service }}" >> $GITHUB_OUTPUT
            echo "kube_path=deploy/kubernetes/${{ inputs.service }}/deployment.yml" >> $GITHUB_OUTPUT
          fi

      # 이미지 빌드 & push
      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ steps.ctx.outputs.name }}:${{ inputs.tag }} \
            -f ${{ steps.ctx.outputs.path }}/Dockerfile ${{ steps.ctx.outputs.path }}
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ steps.ctx.outputs.name }}:${{ inputs.tag }}

      # Manifest 업데이트 내역을 artifact로 정리
      - name: Prepare Artifact
        run: |
          mkdir -p artifact
          echo "${{ inputs.service }},${{ inputs.scraper }},${{ steps.ctx.outputs.name }},${{ inputs.tag }},${{ steps.ctx.outputs.kube_path }}" > artifact/tag_info.csv

      - name: Upload Artifact
        id: upload
        uses: actions/upload-artifact@v4
        with:
          name: tag-info-${{ inputs.service }}-${{ inputs.scraper }}
          path: artifact/tag_info.csv